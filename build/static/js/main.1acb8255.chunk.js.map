{"version":3,"sources":["utils/api/index.js","Layout/Header.js","Layout/Home/index.js","Layout/Study/index.js","Layout/Form/DeckForm.js","Layout/Decks/CreateDeck/index.js","Layout/Decks/Deck/index.js","Layout/NotFound.js","Layout/Form/CardForm.js","Layout/Cards/AddCard/index.js","Layout/Cards/EditCard/index.js","Layout/Decks/EditDeck/index.js","Layout/index.js","App.js","index.js"],"names":["API_BASE_URL","process","headers","Headers","stripCards","deck","cards","fetchJson","url","options","onCancel","a","fetch","response","status","Error","statusText","json","name","console","error","stack","Promise","resolve","listDecks","signal","method","body","JSON","stringify","readDeck","deckId","updateDeck","updatedDeck","id","deleteDeck","listCards","createCard","card","Number","readCard","cardId","updateCard","updatedCard","deleteCard","append","Header","className","Home","decks","setUpdated","history","useHistory","handleDeckDelete","window","confirm","result","push","log","deleteData","deckRender","map","index","description","length","to","onClick","value","Study","useState","setDeck","iterator","setIterator","flipped","setFlipped","useRouteMatch","useParams","useEffect","LoadDeck","clickHandler","prev","countHandler","cardsArray","back","front","aria-label","aria-current","type","DeckForm","handleSubmit","handleChange","onSubmit","placeholder","onChange","CreateDeck","event","preventDefault","createDeck","then","target","Deck","setCards","getCards","handleCardDelete","cardRender","NotFound","CardForm","rows","AddCard","setCard","getDeck","CreateCard","href","EditCard","ReadCard","UpdateCard","EditDeck","UpdateDeck","Layout","updated","setDecks","getDecks","exact","path","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1acb8255.chunk.js","sourcesContent":["/**\n * Defines the base URL for the API.\n * The default values is overridden by the `API_BASE_URL` environment variable.\n */\nconst API_BASE_URL = process.env.API_BASE_URL || \"http://localhost:5000\";\n\n/**\n * Defines the default headers for these functions to work with `json-server`\n */\nconst headers = new Headers();\nheaders.append(\"Content-Type\", \"application/json\");\n\n/**\n * Removes the `cards` property from the deck so it is not accidentally saved with the deck.\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param deck\n *  the deck instance\n * @returns {*}\n *  a copy of the deck instance with the `cards` property removed.\n */\nfunction stripCards(deck) {\n  const { cards, ...deckWithoutCards } = deck;\n  return deckWithoutCards;\n}\n\n/**\n * Fetch `json` from the specified URL and handle error status codes and ignore `AbortError`s\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param url\n *  the url for the requst.\n * @param options\n *  any options for fetch\n * @param onCancel\n *  default value returned if the fetch is cancelled.\n * @returns {Promise<Error|any>}\n *  a promise that resolves to the `json` data or an error.\n *  If the response is not in the 200 - 399 range the promise is rejected.\n */\n\nasync function fetchJson(url, options, onCancel) {\n  try {\n    const response = await fetch(url, options);\n\n    if (response.status < 200 || response.status > 399) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    if (response.status === 204) {\n      return null;\n    }\n\n    return await response.json();\n\n  } catch (error) {\n    if (error.name !== \"AbortError\") {\n      console.error(error.stack);\n      throw error;\n    }\n    return Promise.resolve(onCancel);\n  }\n}\n\n/**\n * Retrieves all existing decks.\n * @returns {Promise<[deck]>}\n *  a promise that resolves to a possibly empty array of decks saved in the database.\n */\nexport async function listDecks(signal) {\n  const url = `${API_BASE_URL}/decks?_embed=cards`;\n  return await fetchJson(url, { signal }, []);\n}\n\n/**\n * Saves deck to the database (public/data/db.json).\n * There is no validation done on the deck object, any object will be saved.\n * @param deck\n *  the deck to save, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<deck>}\n *  a promise that resolves the saved deck, which will now have an `id` property.\n */\nexport async function createDeck(deck, signal) {\n  const url = `${API_BASE_URL}/decks`;\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(stripCards(deck)),\n    signal,\n  };\n  return await fetchJson(url, options, {});\n}\n\n/**\n * Retrieves the deck with the specified `deckId`\n * @param deckId\n *  the `id` property matching the desired deck.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<any>}\n *  a promise that resolves to the saved deck.\n */\nexport async function readDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/decks/${deckId}?_embed=cards`;\n  return await fetchJson(url, { signal }, {});\n}\n\n/**\n * Updates an existing deck\n * @param updatedDeck\n *  the deck to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated deck.\n */\nexport async function updateDeck(updatedDeck, signal) {\n  const url = `${API_BASE_URL}/decks/${updatedDeck.id}?_embed=cards`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(stripCards(updatedDeck)),\n    signal,\n  };\n  return await fetchJson(url, options, updatedDeck);\n}\n\n/**\n * Deletes the deck with the specified `deckId`.\n * @param deckId\n *  the id of the deck to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/decks/${deckId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n\n/**\n * Retrieves all cards associated with the specified `deckId`.\n * @param deckId\n *  the id of the target deck\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to a possible empty array of cards.\n */\nexport async function listCards(deckId, signal) {\n  const url = `${API_BASE_URL}/cards?deckId=${deckId}`;\n  return await fetchJson(url, { signal }, []);\n}\n\n/**\n * Creates a new card associated with the specified `deckId`.\n * There is no validation that there is an existing deck with the specified `deckId`.\n * @param deckId\n *  the id of the target deck\n * @param card\n *  the card to create, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the new card, which will have an `id` property.\n */\nexport async function createCard(deckId, card, signal) {\n  // There is a bug in json-server, if you post to /decks/:deckId/cards the associated deckId is a string\n  // and the card is not related to the deck because the data types of the ID's are different.\n  const url = `${API_BASE_URL}/cards`;\n  card.deckId = Number(deckId);\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(card),\n    signal,\n  };\n  return await fetchJson(url, options, card);\n}\n\n/**\n * Retrieves the card with the specified `cardId`\n * @param cardId\n *  the id of the target\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the saved card.\n */\nexport async function readCard(cardId, signal) {\n  const url = `${API_BASE_URL}/cards/${cardId}`;\n  return await fetchJson(url, { signal }, {});\n}\n\n/**\n * Updates an existing deck\n * @param updatedCard\n *  the card to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated card.\n */\nexport async function updateCard(updatedCard, signal) {\n  const url = `${API_BASE_URL}/cards/${updatedCard.id}`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(updatedCard),\n  };\n  return await fetchJson(url, options, updatedCard);\n}\n\n/**\n * Deletes the card with the specified `cardId`.\n * @param cardId\n *  the id of the card to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteCard(cardId, signal) {\n  const url = `${API_BASE_URL}/cards/${cardId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n","import React from \"react\";\n\nexport default function Header() {\n  return (\n    <header className=\"jumbotron bg-dark\">\n      <div className=\"container text-white\">\n        <h1 className=\"display-4\">Flashcards with React!</h1>\n        <p className=\"lead\">Endless Rendering Possibilites</p>\n      </div>\n    </header>\n  );\n}\n","import React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { deleteDeck } from \"../../utils/api\";\nimport \"./Home.css\";\n\n/* - - - - - - - - - - - - - - - - - - - - - - */\n\nexport default function Home({ decks, setUpdated }) {\n  const history = useHistory();\n\n  /* - - - - - - - - - - - - - - - - - - - - - - */\n\n  const handleDeckDelete = async (deckId) => {\n    const result = window.confirm(\n      `Delete this deck? You will not be able to recover it.`\n    );\n    if (result) {\n      async function deleteData() {\n        try {\n          let result = await deleteDeck(deckId);\n          setUpdated(result);\n          history.push(\"/\");\n        } catch (error) {\n          if (error.name === \"AbortError\") {\n            console.log(\"Aborted\");\n          } else {\n            throw error;\n          }\n        }\n      }\n      deleteData();\n    }\n  };\n\n  /* - - - - - - - - - - - - - - - - - - - - - - */\n\n  let deckRender = decks.map((deck, index) => (\n    <div className=\"card\" key={index}>\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{deck.name}</h5>\n        <p className=\"card-text\">{deck.description}</p>{\" \"}\n        <p className=\"card-text\">\n          <small className=\"text-muted\">{deck.cards.length} cards</small>\n        </p>\n        <Link to={`/decks/${deck.id}`} className=\"btn btn-secondary\">\n          <i className=\"material-icons\">visibility</i>\n          View\n        </Link>\n        <Link to={`/decks/${deck.id}/study`} className=\"btn btn-primary\">\n          <i className=\"material-icons\">book</i>\n          Study\n        </Link>\n        <button\n          onClick={() => handleDeckDelete(deck.id)}\n          value={deck.id}\n          className=\"btn btn-danger\"\n        >\n          <i className=\"material-icons\">delete</i>\n        </button>\n      </div>\n    </div>\n  ));\n\n  /* - - - - - - - - - - - - - - - - - - - - - - */\n\n  return (\n    <>\n      <Link to=\"/decks/new\" className=\"btn btn-secondary\">\n        <i className=\"material-icons\">add</i>\n        Create Deck\n      </Link>\n      {deckRender}\n    </>\n  );\n}\n","import { useRouteMatch, Link, useParams, useHistory } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { readDeck } from \"../../utils/api\";\n\n/* - - - - - - - - - - - - - - - - - - - - - - */\n\nexport default function Study() {\n  const [deck, setDeck] = useState({ cards: [] });\n  const [iterator, setIterator] = useState(0);\n  const [flipped, setFlipped] = useState(false);\n  const { url } = useRouteMatch();\n  const { deckId } = useParams();\n  const history = useHistory();\n\n  /* - - - - - - - - - - - - - - - - - - - - - - */\n\n  useEffect(() => {\n    async function LoadDeck() {\n      try {\n        let result = await readDeck(deckId);\n        setDeck(result);\n      } catch (error) {\n        throw error;\n      }\n    }\n    LoadDeck();\n  }, [deckId]);\n\n  /* - - - - - - - - - - - - - - - - - - - - - - */\n\n  const clickHandler = () => {\n    setFlipped((prev) => !prev);\n  };\n\n  /* - - - - - - - - - - - - - - - - - - - - - - */\n\n  const countHandler = () => {\n    setIterator((prev) => prev + 1);\n    setFlipped((prev) => !prev);\n    if (iterator === deck.cards.length - 1) {\n      if (\n        window.confirm(\n          \"Restart Cards? Click 'cancel' to return to the home page.\"\n        )\n      ) {\n        history.push(url);\n        setIterator(0);\n      } else {\n        history.push(\"/\");\n      }\n    }\n  };\n\n  /* - - - - - - - - - - - - - - - - - - - - - - */\n\n  const cardsArray = deck.cards.map((card, index) => (\n    <div className=\"card\" key={index}>\n      <div className=\"card-body\">\n        <h1 className=\"card-title\">{`Study: ${deck.name}`}</h1>\n        <h5 className=\"card-title\">\n          Card {index + 1} of {deck.cards.length}\n        </h5>\n        {!flipped ? (\n          <p className=\"card-text\">{card.front}</p>\n        ) : (\n          <p className=\"card-text\">{card.back}</p>\n        )}\n        <button className=\"btn btn-primary\" onClick={clickHandler}>\n          Flip\n        </button>\n        {flipped ? (\n          <button className=\"btn btn-primary m-1\" onClick={countHandler}>\n            Next\n          </button>\n        ) : null}\n      </div>\n    </div>\n  ));\n\n  /* - - - - - - - - - - - - - - - - - - - - - - */\n\n  if (cardsArray.length > 2) {\n    return (\n      <>\n        <nav aria-label=\"breadcrumb\">\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\">\n              <i className=\"material-icons\">home</i>\n              <Link to={\"/\"}>Home</Link>\n            </li>\n            <li className=\"breadcrumb-item\">\n              <Link to={`/decks/${deckId}`}>{deck.name}</Link>\n            </li>\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">\n              <Link to={url}>Study</Link>\n            </li>\n          </ol>\n        </nav>\n        {cardsArray[iterator]}\n      </>\n    );\n  }\n\n  /* - - - - - - - - - - - - - - - - - - - - - - */\n\n  return (\n    <>\n      <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <Link to={\"/\"}>Home</Link>\n          </li>\n          <li className=\"breadcrumb-item\">\n            <Link to={`/decks/${deckId}`}>{deck.name}: Study</Link>\n          </li>\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\n            <Link to={url}>Study</Link>\n          </li>\n        </ol>\n      </nav>\n      <h2>Not enough cards.</h2>\n      <p>\n        You need at least 3 cards to study. There are {cardsArray.length} cards\n        in this deck.\n      </p>\n      <Link\n        to={`/decks/${deck.id}/cards/new`}\n        type=\"button\"\n        className=\"btn btn-primary\"\n      >\n        <i className=\"material-icons\">add</i>\n        Add Cards\n      </Link>\n    </>\n  );\n}\n","import { Link } from \"react-router-dom\";\n\nexport default function DeckForm({ handleSubmit, handleChange, deck }) {\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label>Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            placeholder=\"Deck name\"\n            value={deck.name}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Description</label>\n          <textarea\n            id=\"description\"\n            name=\"description\"\n            placeholder=\"Brief decription of the deck\"\n            value={deck.description}\n            onChange={handleChange}\n          ></textarea>\n        </div>\n        <Link to={\"/\"} type=\"button\" className=\"btn btn-secondary\">\n          Cancel\n        </Link>\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Submit\n        </button>\n      </form>\n    </>\n  );\n}","import { Link, useHistory, useRouteMatch } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { createDeck } from \"../../../utils/api\";\nimport DeckForm from \"../../Form/DeckForm\";\nimport \"./CreateDeck.css\";\n\n/* - - - - - - - - - - - - - - - - - - - - - - */\n\nexport default function CreateDeck({ decks, setUpdated }) {\n  const { url } = useRouteMatch();\n  const [deck, setDeck] = useState({ name: \"\", description: \"\" });\n  const history = useHistory();\n\n  /* - - - - - - - - - - - - - - - - - - - - - - */\n\n  const handleChange = ({ target }) => {\n    setDeck({ ...deck, [target.name]: target.value });\n  };\n\n  /* - - - - - - - - - - - - - - - - - - - - - - */\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    let result = createDeck({\n      name: deck.name,\n      description: deck.description,\n    }).then((response) => {\n      setUpdated(result)\n      history.push(`/decks/${response.id}`);\n    });\n  };\n\n  /* - - - - - - - - - - - - - - - - - - - - - - */\n\n  return (\n    <div className=\"container\">\n      <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <i className=\"material-icons\">home</i>\n            <Link to={\"/\"}>Home</Link>\n          </li>\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\n            <Link to={url}>Create Deck</Link>\n          </li>\n        </ol>\n      </nav>\n      <h2>Create Deck</h2>\n      <DeckForm\n        handleSubmit={handleSubmit}\n        handleChange={handleChange}\n        deck={deck}\n        decks={decks}\n      />\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport {\n  readDeck,\n  deleteDeck,\n  deleteCard,\n  listCards,\n} from \"../../../utils/api\";\n\n/* - - - - - - - - - - - - - - - - - - - - - - */\n\nexport default function Deck({ setUpdated }) {\n  const [deck, setDeck] = useState({});\n  const [cards, setCards] = useState([]);\n  const history = useHistory();\n  const { deckId } = useParams();\n\n  /* - - - - - - - - - - - - - - - - - - - - - - */\n\n  useEffect(() => {\n    async function LoadDeck() {\n      try {\n        let result = await readDeck(deckId);\n        setDeck(result);\n      } catch (error) {\n        throw error;\n      }\n    }\n    LoadDeck();\n  }, [deckId]);\n\n  /* - - - - - - - - - - - - - - - - - - - - - - */\n\n  useEffect(() => {\n    async function getCards() {\n      let result = await listCards(deckId);\n      setCards(result);\n    }\n    getCards();\n  }, [deckId]);\n\n  /* - - - - - - - - - - - - - - - - - - - - - - */\n\n  const handleDeckDelete = async (deckId) => {\n    const result = window.confirm(\n      `Delete deck? You will not be able to recover it.`\n    );\n    if (result) {\n      async function deleteData() {\n        try {\n          let result = await deleteDeck(deckId);\n          setUpdated(result);\n          history.push(\"/\");\n        } catch (error) {\n          if (error.name === \"AbortError\") {\n            console.log(\"Aborted\");\n          } else {\n            throw error;\n          }\n        }\n      }\n      deleteData();\n    }\n  };\n\n  /* - - - - - - - - - - - - - - - - - - - - - - */\n\n  const handleCardDelete = async ({ target }) => {\n    const value = target.value;\n    const result = window.confirm(\n      `Delete this card? You will not be able to recover it.`\n    );\n    if (result) {\n      async function deleteData() {\n        try {\n          await deleteCard(value);\n        } catch (error) {\n          if (error.name === \"AbortError\") {\n            console.log(\"Aborted\");\n          } else {\n            throw error;\n          }\n        }\n      }\n      deleteData();\n    }\n  };\n\n  /* - - - - - - - - - - - - - - - - - - - - - - */\n\n  let deckRender = (\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{deck.name}</h5>\n        <p className=\"card-text\">{deck.description}</p>{\" \"}\n        <Link to={`/decks/${deck.id}/edit`} className=\"btn btn-secondary\">\n          <i className=\"material-icons\">edit</i>\n          Edit\n        </Link>\n        <Link to={`/decks/${deck.id}/study`} className=\"btn btn-primary\">\n          <i className=\"material-icons\">book</i>\n          Study\n        </Link>\n        <Link to={`/decks/${deck.id}/cards/new`} className=\"btn btn-primary\">\n          <i className=\"material-icons\">add</i>\n          Add Cards\n        </Link>\n        <button\n          onClick={() => handleDeckDelete(deck.id)}\n          value={deck.id}\n          className=\"btn btn-danger\"\n        >\n          <i className=\"material-icons\">delete</i>\n        </button>\n      </div>\n    </div>\n  );\n\n  /* - - - - - - - - - - - - - - - - - - - - - - */\n\n  let cardRender = cards.map((card, index) => (\n    <div className=\"card\" key={index}>\n      <div className=\"card-body\">\n        <div className=\"container\">\n          <div className=\"row justify-content-start\">\n            <div className=\"col-6\">{card.front}</div>\n            <div className=\"col-6\">{card.back}</div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-9\"></div>\n            <div className=\"col-3\">\n              <Link\n                to={`/decks/${deckId}/cards/${card.id}/edit`}\n                className=\"btn btn-secondary\"\n              >\n                <i className=\"material-icons\">edit</i>\n                Edit\n              </Link>\n              <button\n                onClick={handleCardDelete}\n                value={card.id}\n                className=\"btn btn-danger\"\n              >\n                <i className=\"material-icons\">delete</i>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  ));\n\n  /* - - - - - - - - - - - - - - - - - - - - - - */\n\n  return (\n    <>\n      <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <i className=\"material-icons\">home</i>\n            <Link to={\"/\"}>Home</Link>\n          </li>\n          <li className=\"breadcrumb-item\">\n            <Link to={`/decks/${deckId}`}>{deck.name}</Link>\n          </li>\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\n            <Link>Deck</Link>\n          </li>\n        </ol>\n      </nav>\n      {deckRender}\n      {cardRender}\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h1>Not Found</h1>\n    </div>\n  );\n}\n","import { Link } from \"react-router-dom\";\n\nexport default function CardForm({ handleSubmit, handleChange, deck, card }) {\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label>Front</label>\n        <textarea\n          name=\"front\"\n          id=\"cardFront\"\n          rows=\"3\"\n          placeholder=\"Front side of card\"\n          value={card.front}\n          onChange={handleChange}\n        ></textarea>\n      </div>\n      <div className=\"form-group\">\n        <label>Back</label>\n        <textarea\n          name=\"back\"\n          id=\"back\"\n          placeholder=\"Back side of card\"\n          value={card.back}\n          onChange={handleChange}\n        ></textarea>\n      </div>\n      <Link\n        to={`/decks/${deck.id}`}\n        type=\"button\"\n        className=\"btn btn-secondary\"\n      >\n        Done\n      </Link>\n      <button type=\"submit\" className=\"btn btn-primary\">\n        Submit\n      </button>\n    </form>\n  );\n}","import React, { useState, useEffect } from \"react\";\nimport { Link, useParams, useRouteMatch } from \"react-router-dom\";\nimport { createCard, readDeck } from \"../../../utils/api\";\nimport CardForm from \"../../Form/CardForm\";\n\n/* - - - - - - - - - - - - - - - - - - - - - - */\n\nexport default function AddCard({ setUpdated }) {\n  const { deckId } = useParams();\n  const [deck, setDeck] = useState([]);\n  const [card, setCard] = useState({ front: \"\", back: \"\" });\n  const { url } = useRouteMatch();\n\n  /* - - - - - - - - - - - - - - - - - - - - - - */\n\n  useEffect(() => {\n    async function getDeck() {\n      try {\n        let result = await readDeck(deckId);\n        setDeck(result);\n      } catch (error) {\n        throw error;\n      }\n    }\n    getDeck();\n  }, [deckId]);\n\n  /* - - - - - - - - - - - - - - - - - - - - - - */\n\n  const handleChange = ({ target }) => {\n    setCard({ ...card, [target.name]: target.value });\n  };\n\n  /* - - - - - - - - - - - - - - - - - - - - - - */\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setCard({ front: card.front, back: card.back });\n\n    try {\n      async function CreateCard() {\n        let result = await createCard(deckId, card);\n        setUpdated(result);\n      }\n      CreateCard();\n    } catch (error) {\n      throw error;\n    }\n    setCard({ front: \"\", back: \"\" });\n  };\n\n  /* - - - - - - - - - - - - - - - - - - - - - - */\n\n  return (\n    <div className=\"container\">\n      <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <i className=\"material-icons\">home</i>\n            <a href=\"/\">Home</a>\n          </li>\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\n            <Link to={url}>Add Card</Link>\n          </li>\n        </ol>\n      </nav>\n      <h2>{deck.name}: Add Card</h2>\n      <CardForm\n        handleChange={handleChange}\n        handleSubmit={handleSubmit}\n        card={card}\n        deck={deck}\n      />\n    </div>\n  );\n}\n","import { useParams, Link, useRouteMatch, useHistory } from \"react-router-dom\";\nimport { readDeck, updateCard, readCard } from \"../../../utils/api\";\nimport { useEffect, useState } from \"react\";\nimport CardForm from \"../../Form/CardForm\";\n\n/* - - - - - - - - - - - - - - - - - - - - - - */\n\nexport default function EditCard({ setUpdated }) {\n  const { deckId, cardId } = useParams();\n  const [deck, setDeck] = useState([]);\n  const [card, setCard] = useState({ front: \"\", back: \"\" });\n  const { url } = useRouteMatch();\n  const history = useHistory();\n\n  /* - - - - - - - - - - - - - - - - - - - - - - */\n\n  useEffect(() => {\n    async function getDeck() {\n      try {\n        let result = await readDeck(deckId);\n        setDeck(result);\n      } catch (error) {\n        throw error;\n      }\n    }\n    getDeck();\n  }, [deckId]);\n\n  /* - - - - - - - - - - - - - - - - - - - - - - */\n\n  useEffect(() => {\n    async function ReadCard() {\n      try {\n        let result = await readCard(cardId);\n        setCard(result);\n      } catch (error) {\n        throw error;\n      }\n    }\n    ReadCard();\n  }, [cardId]);\n\n  /* - - - - - - - - - - - - - - - - - - - - - - */\n\n  const handleChange = ({ target }) => {\n    setCard({\n      ...card,\n      [target.name]: target.value,\n    });\n  };\n\n  /* - - - - - - - - - - - - - - - - - - - - - - */\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setCard((prev) => ({ ...prev, front: card.front, back: card.back }));\n\n    try {\n      async function UpdateCard() {\n        let result = await updateCard(card);\n        setUpdated(result);\n      }\n      UpdateCard();\n    } catch (error) {\n      throw error;\n    }\n    history.push(`/decks/${deck.id}`);\n  };\n\n  /* - - - - - - - - - - - - - - - - - - - - - - */\n\n  return (\n    <div className=\"container\">\n      <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <Link to={\"/\"}>Home</Link>\n          </li>\n          <li className=\"breadcrumb-item\">\n            <Link to={`/decks/${deckId}`}>{deck.name}</Link>\n          </li>\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\n            <Link to={url}>Add Card</Link>\n          </li>\n        </ol>\n      </nav>\n      <h2>Edit Card {card.id}</h2>\n      <CardForm\n        handleChange={handleChange}\n        handleSubmit={handleSubmit}\n        card={card}\n        deck={deck}\n      />\n    </div>\n  );\n}\n","import { Link, useHistory, useParams, useRouteMatch } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { updateDeck, readDeck } from \"../../../utils/api\";\nimport DeckForm from \"../../Form/DeckForm\";\n\n/* - - - - - - - - - - - - - - - - - - - - - - */\n\nexport default function EditDeck({ decks, setUpdated }) {\n  const { deckId } = useParams();\n  const [deck, setDeck] = useState({ name: \"\", description: \"\" });\n  const history = useHistory();\n  const { url } = useRouteMatch();\n\n  /* - - - - - - - - - - - - - - - - - - - - - - */\n\n  useEffect(() => {\n    async function getDeck() {\n      try {\n        let result = await readDeck(deckId);\n        setDeck(result);\n      } catch (error) {\n        throw error;\n      }\n    }\n    getDeck();\n  }, [deckId]);\n\n  /* - - - - - - - - - - - - - - - - - - - - - - */\n\n  const handleChange = ({ target }) => {\n    setDeck({\n      ...deck,\n      [target.name]: target.value,\n    });\n  };\n\n  /* - - - - - - - - - - - - - - - - - - - - - - */\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    setDeck({ name: deck.name, description: deck.description });\n\n    try {\n      async function UpdateDeck() {\n        let result = await updateDeck(deck);\n        setUpdated(result);\n      }\n      UpdateDeck();\n    } catch (error) {\n      throw error;\n    }\n    history.push(`/decks/${deckId}`);\n  };\n\n  /* - - - - - - - - - - - - - - - - - - - - - - */\n\n  return (\n    <div className=\"container\">\n      <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <Link to={\"/\"}>Home</Link>\n          </li>\n          <li className=\"breadcrumb-item\">\n            <Link to={`/decks/${deckId}`}>{deck.name}</Link>\n          </li>\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\n            <Link to={url}>Edit Deck</Link>\n          </li>\n        </ol>\n      </nav>\n      <h2>Edit Deck</h2>\n      <DeckForm\n        handleChange={handleChange}\n        handleSubmit={handleSubmit}\n        decks={decks}\n        deck={deck}\n      />\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { listDecks } from \"../utils/api\";\nimport Header from \"./Header\";\nimport Home from \"./Home/index\";\nimport Study from \"./Study/index\";\nimport CreateDeck from \"./Decks/CreateDeck/index\";\nimport Deck from \"./Decks/Deck/index\";\nimport NotFound from \"./NotFound\";\nimport AddCard from \"./Cards/AddCard/index\";\nimport EditCard from \"./Cards/EditCard/index\";\nimport EditDeck from \"./Decks/EditDeck/index\";\n\n/* - - - - - - - - - - - - - - - - - - - - - - */\n\nexport default function Layout() {\n  const [updated, setUpdated] = useState(0);\n  const [decks, setDecks] = useState([]);\n\n  /* - - - - - - - - - - - - - - - - - - - - - - */\n\n  useEffect(() => {\n    async function getDecks() {\n      let result = await listDecks();\n      setDecks(result);\n    }\n    getDecks();\n  }, [updated]);\n\n  /* - - - - - - - - - - - - - - - - - - - - - - */\n\n  return (\n    <>\n      <Header />\n      <div className=\"container\">\n        <Router>\n          <Switch>\n            <Route exact path>\n              <Home decks={decks} setUpdated={setUpdated} />\n            </Route>\n\n            <Route path={\"/decks/:deckId/study\"}>\n              <Study />\n            </Route>\n\n            <Route path={\"/decks/:deckId/cards/:cardId/edit\"}>\n              <EditCard setUpdated={setUpdated} />\n            </Route>\n\n            <Route path={\"/decks/:deckId/cards/new\"}>\n              <AddCard setUpdated={setUpdated} />\n            </Route>\n\n            <Route path={\"/decks/:deckId/edit\"}>\n              <EditDeck decks={decks} setUpdated={setUpdated} />\n            </Route>\n\n            <Route path={\"/decks/new\"}>\n              <CreateDeck decks={decks} setUpdated={setUpdated} />\n            </Route>\n\n            <Route path={\"/decks/:deckId\"}>\n              <Deck setUpdated={setUpdated} />\n            </Route>\n\n            <Route>\n              <NotFound />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"./Layout\";\n\n/**\n * App is a wrapper for <Layout>, you should not need to change this file.\n */\n\nexport default function App() {\n  return (\n    <div className=\"app-routes\">\n      <Switch>\n        <Route path=\"/\">\n          <Layout />\n        </Route>\n      </Switch>\n    </div>\n  );\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}